# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
  robotic-mobi-automation:
    docker:
      - image: feigi/alpine-mvn-node:v1
    steps:
      - checkout
      - run: |
          apk add --no-cache wget
          mvn clean -q
          pwd
          mvn package -DskipTests=true -q
          wget file.robotic.mobi/get_file_by_path?path=general-files/robotic-gitlab-appium-ci.tar.gz -O robotic-gitlab-appium-ci.tar.gz
          unzip robotic-gitlab-appium-ci.tar.gz
          cd output
          npm install
          echo $CIRCLE_WORKING_DIRECTORY
          echo $TOKEN
          echo $CIRCLE_PROJECT_REPONAME
          echo $CIRCLE_BUILD_NUM
          echo $CIRCLE_PROJECT_REPONAME
          DIR=$CIRCLE_WORKING_DIRECTORY TOKEN=$TOKEN DEVICE_ID=$DEVICE_IDS APP_NAME=$CIRCLE_PROJECT_REPONAME TEST_NAME=$CIRCLE_BUILD_NUM TEST_DESC=$CIRCLE_PROJECT_REPONAME node index.js
    environment:
      TOKEN: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtb2JpbmF2ZWwiOiJib3VuIiwiaWF0IjoxNjQwNzc4NzEzLCJleHAiOjE2NDA4MTQ3MTN9.y5yDdP5WzcjFzIfnebBBOtr58QxIeJJxewYSbui7qug'
      PROJECT_NAME: 'test'
      DEVICE_IDS: >
        [{"name":"Xiaomi Redmi Note 9 Pro","udid":"75c53f4a", "runTest": true},
        {"name":"Samsung Galaxy Tab A 10.1","udid":"R52MB0MM5WJ", "runTest": true},
        {"name": "Apple XS", "udid": "00008020-000125660279002E", "runTest": true},
        {"name": "Apple 11 Pro Max", "udid": "00008030-000431860A88802E", "runTest": true}]
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - robotic-mobi-automation
